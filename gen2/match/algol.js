"use strict";
/**
 * @file algol.ts
 *
 * Constant determining the algorithm
 */

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Number of sentences which are not used
 */
exports.Cutoff_Sentences = 120;
exports.RANKING_EPSILON = 0.000000001;
/*
 try 4, 1.2

 instead of 8, 1.5
*/
exports.calcDist = {
  lengthDelta1: 15
};
/**
 * levenshtein distances above this will not be considered valid
 */
exports.Cutoff_LevenShtein = 150;
exports.Cutoff_WordMatch = 0.935; // 0.85  // 0.98
exports.Cutoff_rangeCloseMatch = 0.98;
/**
 * Maximum amount of spaces permitted in a combined word
 *
 * Note that quoted words are never combined, and may exceed this limit,
 * e.g.   A "q u o t e d" entry.
 */
exports.MaxSpacesPerCombinedWord = 3;
/**
 * Weight factor to use on the a given word distance
 * of 0, 1, 2, 3 ....
 */
exports.aReinforceDistWeight = [0.1, 0.1, 0.05, 0.02];
/**
 * only the top n words are considered
 */
exports.Top_N_WordCategorizations = 5;
exports.DescribeValueListMinCountValueList = 3;
exports.DescribeValueListLengthCharLimit = 60;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdGNoL2FsZ29sLmpzIiwiLi4vc3JjL21hdGNoL2FsZ29sLnRzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3V0b2ZmX1NlbnRlbmNlcyIsIlJBTktJTkdfRVBTSUxPTiIsImNhbGNEaXN0IiwibGVuZ3RoRGVsdGExIiwiQ3V0b2ZmX0xldmVuU2h0ZWluIiwiQ3V0b2ZmX1dvcmRNYXRjaCIsIkN1dG9mZl9yYW5nZUNsb3NlTWF0Y2giLCJNYXhTcGFjZXNQZXJDb21iaW5lZFdvcmQiLCJhUmVpbmZvcmNlRGlzdFdlaWdodCIsIlRvcF9OX1dvcmRDYXRlZ29yaXphdGlvbnMiLCJEZXNjcmliZVZhbHVlTGlzdE1pbkNvdW50VmFsdWVMaXN0IiwiRGVzY3JpYmVWYWx1ZUxpc3RMZW5ndGhDaGFyTGltaXQiXSwibWFwcGluZ3MiOiJBQUFBO0FDQ0E7Ozs7OztBREtBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QyxFQUFFQyxPQUFPLElBQVQsRUFBN0M7QUNFQTs7O0FBR2FELFFBQUFFLGdCQUFBLEdBQW1CLEdBQW5CO0FBSUFGLFFBQUFHLGVBQUEsR0FBa0IsV0FBbEI7QUFFYjs7Ozs7QUFNYUgsUUFBQUksUUFBQSxHQUFZO0FBQ3ZCQyxnQkFBZTtBQURRLENBQVo7QUFHYjs7O0FBR2FMLFFBQUFNLGtCQUFBLEdBQThCLEdBQTlCO0FBRUFOLFFBQUFPLGdCQUFBLEdBQW1CLEtBQW5CLEMsQ0FBeUI7QUFFekJQLFFBQUFRLHNCQUFBLEdBQXlCLElBQXpCO0FBRWI7Ozs7OztBQU1hUixRQUFBUyx3QkFBQSxHQUFvQyxDQUFwQztBQUViOzs7O0FBSWFULFFBQUFVLG9CQUFBLEdBQXNDLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxJQUFYLEVBQWlCLElBQWpCLENBQXRDO0FBRWI7OztBQUdhVixRQUFBVyx5QkFBQSxHQUE0QixDQUE1QjtBQUlBWCxRQUFBWSxrQ0FBQSxHQUFxQyxDQUFyQztBQUNBWixRQUFBYSxnQ0FBQSxHQUFtQyxFQUFuQyIsImZpbGUiOiJtYXRjaC9hbGdvbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBAZmlsZSBhbGdvbC50c1xuICpcbiAqIENvbnN0YW50IGRldGVybWluaW5nIHRoZSBhbGdvcml0aG1cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBOdW1iZXIgb2Ygc2VudGVuY2VzIHdoaWNoIGFyZSBub3QgdXNlZFxuICovXG5leHBvcnRzLkN1dG9mZl9TZW50ZW5jZXMgPSAxMjA7XG5leHBvcnRzLlJBTktJTkdfRVBTSUxPTiA9IDAuMDAwMDAwMDAxO1xuLypcbiB0cnkgNCwgMS4yXG5cclxuIGluc3RlYWQgb2YgOCwgMS41XG4qL1xuZXhwb3J0cy5jYWxjRGlzdCA9IHtcbiAgICBsZW5ndGhEZWx0YTE6IDE1LFxufTtcbi8qKlxuICogbGV2ZW5zaHRlaW4gZGlzdGFuY2VzIGFib3ZlIHRoaXMgd2lsbCBub3QgYmUgY29uc2lkZXJlZCB2YWxpZFxuICovXG5leHBvcnRzLkN1dG9mZl9MZXZlblNodGVpbiA9IDE1MDtcbmV4cG9ydHMuQ3V0b2ZmX1dvcmRNYXRjaCA9IDAuOTM1OyAvLyAwLjg1ICAvLyAwLjk4XG5leHBvcnRzLkN1dG9mZl9yYW5nZUNsb3NlTWF0Y2ggPSAwLjk4O1xuLyoqXG4gKiBNYXhpbXVtIGFtb3VudCBvZiBzcGFjZXMgcGVybWl0dGVkIGluIGEgY29tYmluZWQgd29yZFxuICpcbiAqIE5vdGUgdGhhdCBxdW90ZWQgd29yZHMgYXJlIG5ldmVyIGNvbWJpbmVkLCBhbmQgbWF5IGV4Y2VlZCB0aGlzIGxpbWl0LFxuICogZS5nLiAgIEEgXCJxIHUgbyB0IGUgZFwiIGVudHJ5LlxuICovXG5leHBvcnRzLk1heFNwYWNlc1BlckNvbWJpbmVkV29yZCA9IDM7XG4vKipcbiAqIFdlaWdodCBmYWN0b3IgdG8gdXNlIG9uIHRoZSBhIGdpdmVuIHdvcmQgZGlzdGFuY2VcbiAqIG9mIDAsIDEsIDIsIDMgLi4uLlxuICovXG5leHBvcnRzLmFSZWluZm9yY2VEaXN0V2VpZ2h0ID0gWzAuMSwgMC4xLCAwLjA1LCAwLjAyXTtcbi8qKlxuICogb25seSB0aGUgdG9wIG4gd29yZHMgYXJlIGNvbnNpZGVyZWRcbiAqL1xuZXhwb3J0cy5Ub3BfTl9Xb3JkQ2F0ZWdvcml6YXRpb25zID0gNTtcbmV4cG9ydHMuRGVzY3JpYmVWYWx1ZUxpc3RNaW5Db3VudFZhbHVlTGlzdCA9IDM7XG5leHBvcnRzLkRlc2NyaWJlVmFsdWVMaXN0TGVuZ3RoQ2hhckxpbWl0ID0gNjA7XG4iLCJcbi8qKlxuICogQGZpbGUgYWxnb2wudHNcbiAqXG4gKiBDb25zdGFudCBkZXRlcm1pbmluZyB0aGUgYWxnb3JpdGhtXG4gKi9cblxuXG4vKipcbiAqIE51bWJlciBvZiBzZW50ZW5jZXMgd2hpY2ggYXJlIG5vdCB1c2VkXG4gKi9cbmV4cG9ydCBjb25zdCBDdXRvZmZfU2VudGVuY2VzID0gMTIwO1xuXG5cblxuZXhwb3J0IGNvbnN0IFJBTktJTkdfRVBTSUxPTiA9IDAuMDAwMDAwMDAxO1xuXG4vKlxuIHRyeSA0LCAxLjJcblxuIGluc3RlYWQgb2YgOCwgMS41XG4qL1xuXG5leHBvcnQgY29uc3QgY2FsY0Rpc3QgID0ge1xuICBsZW5ndGhEZWx0YTEgOiAxNSxcbn1cbi8qKlxuICogbGV2ZW5zaHRlaW4gZGlzdGFuY2VzIGFib3ZlIHRoaXMgd2lsbCBub3QgYmUgY29uc2lkZXJlZCB2YWxpZFxuICovXG5leHBvcnQgY29uc3QgQ3V0b2ZmX0xldmVuU2h0ZWluIDogbnVtYmVyID0gMTUwO1xuXG5leHBvcnQgY29uc3QgQ3V0b2ZmX1dvcmRNYXRjaCA9IDAuOTM1Oy8vIDAuODUgIC8vIDAuOThcblxuZXhwb3J0IGNvbnN0IEN1dG9mZl9yYW5nZUNsb3NlTWF0Y2ggPSAwLjk4O1xuXG4vKipcbiAqIE1heGltdW0gYW1vdW50IG9mIHNwYWNlcyBwZXJtaXR0ZWQgaW4gYSBjb21iaW5lZCB3b3JkXG4gKlxuICogTm90ZSB0aGF0IHF1b3RlZCB3b3JkcyBhcmUgbmV2ZXIgY29tYmluZWQsIGFuZCBtYXkgZXhjZWVkIHRoaXMgbGltaXQsXG4gKiBlLmcuICAgQSBcInEgdSBvIHQgZSBkXCIgZW50cnkuXG4gKi9cbmV4cG9ydCBjb25zdCBNYXhTcGFjZXNQZXJDb21iaW5lZFdvcmQgOiBudW1iZXIgPSAzO1xuXG4vKipcbiAqIFdlaWdodCBmYWN0b3IgdG8gdXNlIG9uIHRoZSBhIGdpdmVuIHdvcmQgZGlzdGFuY2VcbiAqIG9mIDAsIDEsIDIsIDMgLi4uLlxuICovXG5leHBvcnQgY29uc3QgYVJlaW5mb3JjZURpc3RXZWlnaHQ6IEFycmF5PG51bWJlcj4gPSBbMC4xLCAwLjEsIDAuMDUsIDAuMDJdO1xuXG4vKipcbiAqIG9ubHkgdGhlIHRvcCBuIHdvcmRzIGFyZSBjb25zaWRlcmVkXG4gKi9cbmV4cG9ydCBjb25zdCBUb3BfTl9Xb3JkQ2F0ZWdvcml6YXRpb25zID0gNTtcblxuXG5cbmV4cG9ydCBjb25zdCBEZXNjcmliZVZhbHVlTGlzdE1pbkNvdW50VmFsdWVMaXN0ID0gMztcbmV4cG9ydCBjb25zdCBEZXNjcmliZVZhbHVlTGlzdExlbmd0aENoYXJMaW1pdCA9IDYwO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
