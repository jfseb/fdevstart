{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/match/listall.ts"],"names":[],"mappings":"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","file":"match/listall.js","sourcesContent":["/**\n *\n * @module jfseb.fdevstart.analyze\n * @file analyze.ts\n * @copyright (c) 2016 Gerd Forstmann\n */\n\n\nimport * as InputFilter from './inputFilter';\n\nimport * as Algol from './algol';\nimport * as debug from 'debug';\n\nconst debuglog = debug('listall');\nimport * as logger from '../utils/logger';\nvar logPerf = logger.perf(\"perflistall\");\nvar perflog = debug('perf');\n//const perflog = logger.perf(\"perflistall\");\n\nimport * as Utils from 'abot_utils';\n\nimport * as IMatch from './ifmatch';\n\nimport * as Toolmatcher from './toolmatcher';\n\nimport { BreakDown } from 'fdevsta_monmove';\n\nimport { Sentence as Sentence} from 'abot_erbase';\n\nimport { Word as Word} from 'abot_erbase';\n\nimport * as Operator from './operator';\n\nimport * as WhatIs from './whatis';\n\nimport { ErError as ErError} from 'abot_erbase';\n\nimport { Model } from 'fdevsta_monmove';\n\nimport * as Match from './match';\n\nvar sWords = {};\n\nexport function matchRecordHavingCategory(category: string, records: Array<IMatch.IRecord>)\n  : Array<IMatch.IRecord> {\n  debuglog(debuglog.enabled ? JSON.stringify(records,undefined,2) : \"-\");\n  var relevantRecords = records.filter(function (record: IMatch.IRecord) {\n    return (record[category] !== undefined) && (record[category] !== null);\n  });\n  var res = [];\n  debuglog(\"relevant records nr:\" + relevantRecords.length);\n  return relevantRecords;\n}\n\n\nexport function analyzeContextString(contextQueryString : string,  rules: IMatch.SplitRules) {\n  return WhatIs.analyzeContextString(contextQueryString,rules);\n}\n\n// const result = WhatIs.resolveCategory(cat, a1.entity,\n//   theModel.mRules, theModel.tools, theModel.records);\n\n\n\nexport function listAllWithContext(category: string, contextQueryString: string,\n  aRules: IMatch.SplitRules, records: Array<IMatch.IRecord>, domainCategoryFilter?: IMatch.IDomainCategoryFilter): IMatch.IProcessedWhatIsAnswers {\n  var res = listAllTupelWithContext([category], contextQueryString, aRules, records, domainCategoryFilter);\n\n  var answers = res.tupelanswers.map(function (o): IMatch.IWhatIsAnswer {\n    return {\n      sentence: o.sentence,\n      record: o.record,\n      category: o.categories[0],\n      result: o.result[0],\n      _ranking: o._ranking\n    };\n  }\n  );\n  return {\n    sentences: res.sentences,\n    errors: res.errors,\n    tokens: res.tokens,\n    answers: answers\n  };\n}\n\n\nexport function listAllWithCategory(category: string, records: Array<IMatch.IRecord>): Array<IMatch.IRecord> {\n  var matchedAnswers = matchRecordHavingCategory(category, records); //aTool: Array<IMatch.ITool>): any /* objectstream*/ {\n  debuglog(\" listAllWithCategory:\" + JSON.stringify(matchedAnswers, undefined, 2));\n  return matchedAnswers;\n}\n\nexport function listAllTupelWithContext(categories: string[], contextQueryString: string,\n  aRules: IMatch.SplitRules, records: Array<IMatch.IRecord>, domainCategoryFilter?: IMatch.IDomainCategoryFilter): IMatch.IProcessedWhatIsTupelAnswers {\n  if (contextQueryString.length === 0) {\n    return {\n      tupelanswers : [],\n      errors : [ErError.makeError_EMPTY_INPUT()] ,\n      tokens :[],\n    };\n  } else {\n    logPerf('listAllWithContext');\n    perflog(\"totalListAllWithContext\");\n    var aSentencesReinforced = analyzeContextString(contextQueryString, aRules);\n    perflog(\"LATWC matching records (s=\" + aSentencesReinforced.sentences.length + \")...\");\n    var matchedAnswers = WhatIs.matchRecordsQuickMultipleCategories(aSentencesReinforced, categories, records, domainCategoryFilter); //aTool: Array<IMatch.ITool>): any /* objectstream*/ {\n    if(debuglog.enabled){\n      debuglog(\" matched Answers\" + JSON.stringify(matchedAnswers, undefined, 2));\n    }\n    perflog(\"filtering topRanked (a=\" + matchedAnswers.tupelanswers.length + \")...\");\n    var matchedFiltered = WhatIs.filterOnlyTopRankedTupel(matchedAnswers.tupelanswers);\n    if (debuglog.enabled) {\n      debuglog(\"LATWC matched top-ranked Answers\" + JSON.stringify(matchedFiltered, undefined, 2));\n    }\n    perflog(\"totalListAllWithContext (a=\" + matchedFiltered.length + \")\");\n    logPerf('listAllWithContext');\n    return {\n      tupelanswers : matchedFiltered, // ??? Answers;\n      errors : aSentencesReinforced.errors,\n      tokens: aSentencesReinforced.tokens\n    }\n  }\n}\n\nexport function filterStringListByOp(operator: IMatch.IOperator, fragment : string,  srcarr : string[] ) : string[] {\n  var fragmentLC = BreakDown.trimQuotedSpaced(fragment.toLowerCase());\n  return srcarr.filter(function(str) {\n    return Operator.matches(operator, fragmentLC, str.toLowerCase());\n  }).sort();\n}\n\nfunction compareCaseInsensitive(a: string, b : string) {\n  var r = a.toLowerCase().localeCompare(b.toLowerCase());\n  if (r) {\n    return r;\n  }\n  return -a.localeCompare(b);\n}\n\n/**\n * Sort string list case insensitive, then remove duplicates retaining\n * \"largest\" match\n */\nexport function removeCaseDuplicates(arr : string[]) : string[] {\n  arr.sort(compareCaseInsensitive);\n  debuglog('sorted arr' + JSON.stringify(arr));\n  return arr.filter(function(s, index) {\n    return index === 0 || (0 !== arr[index -1 ].toLowerCase().localeCompare(s.toLowerCase()));\n  });\n};\n\nexport function getCategoryOpFilterAsDistinctStrings(operator: IMatch.IOperator, fragment : string,\n  category : string, records: Array<IMatch.IRecord>, filterDomain? : string) : string[] {\n    var fragmentLC = BreakDown.trimQuoted(fragment.toLowerCase());\n    var res = [];\n    var seen = {};\n    records.forEach(function(record) {\n      if(filterDomain && record ['_domain'] !== filterDomain) {\n        return;\n      }\n      if(record[category] && Operator.matches(operator, fragmentLC, record[category].toLowerCase())) {\n        if(!seen[record[category]]) {\n          seen[record[category]] = true;\n          res.push(record[category]);\n        }\n      }\n    });\n    return removeCaseDuplicates(res);\n};\n\nexport function likelyPluralDiff(a : string, pluralOfa : string) : boolean {\n  var aLC = BreakDown.trimQuoted(a.toLowerCase())  || \"\";\n  var pluralOfALC = BreakDown.trimQuoted((pluralOfa ||\"\").toLowerCase()) || \"\";\n  if (aLC === pluralOfALC) {\n    return true;\n  }\n  if( aLC +'s' === pluralOfALC) {\n    return true;\n  }\n  return false;\n};\n\n\n\n\nexport function joinSortedQuoted(strings : string[] ) : string {\n  if (strings.length === 0) {\n    return \"\";\n  }\n  return '\"' + strings.sort().join('\"; \"') + '\"';\n}\n\nexport function joinDistinct(category : string, records : Array<IMatch.IRecord>) : string {\n  var res = records.reduce(function(prev, oRecord) {\n    prev[oRecord[category]] = 1;\n    return prev;\n  },{} as any);\n  return joinSortedQuoted(Object.keys(res));\n}\n\nexport function formatDistinctFromWhatIfResult( answers : Array<IMatch.IWhatIsAnswer>) : string {\n  return joinSortedQuoted(answers.map(function(oAnswer) {\n    return oAnswer.result;\n  }));\n}\n\nexport function joinResults(results: Array<IMatch.IWhatIsAnswer>): string[] {\n  var res  = [];\n  var cnt = results.reduce(function (prev, result) {\n    if (result._ranking === results[0]._ranking) {\n      if(res.indexOf(result.result) < 0 ){\n        res.push(result.result);\n      }\n      return prev + 1;\n    }\n  }, 0);\n  return res;\n}\n\n\n\nexport function joinResultsTupel(results: Array<IMatch.IWhatIsTupelAnswer>): string[] {\n  var res  = [];\n  var cnt = results.reduce(function (prev, result) {\n    if (result._ranking === results[0]._ranking) {\n      var value = Utils.listToQuotedCommaAnd(result.result);\n      if(res.indexOf(value) < 0 ){\n        res.push(value);\n      }\n      return prev + 1;\n    }\n  }, 0);\n  return res;\n}\n\nexport function inferDomain(theModel : IMatch.IModels, contextQueryString: string): string {\n // console.log(\"here the string\" + contextQueryString);\n //  console.log(\"here the rules\" + JSON.stringify(theModel.mRules));\n  var res = analyzeContextString(contextQueryString, theModel.rules);\n  //console.log(JSON.stringify(res,undefined,2));\n  // run through the string, search for a category\n  if(!res.sentences.length) {\n    return undefined;\n  }\n  var domains = [];\n  //console.log(Sentence.dumpNiceArr(res));\n  // do we have a domain ?\n  res.sentences[0].forEach(function(oWordGroup) {\n    if(oWordGroup.category === \"domain\") {\n      domains.push(oWordGroup.matchedString)\n    }\n  });\n  if(domains.length === 1) {\n    debuglog(\"got a precise domain \" + domains[0]);\n    return domains[0];\n  }\n  if(domains.length > 0 ) {\n    debuglog(debuglog.enabled? (\"got more than one domain, confused  \" + domains.join(\"\\n\")):'-');\n    return undefined;\n    // TODOD\n  }\n  debuglog(\"attempting to determine categories\")\n  // try a category reverse map\n  res.sentences[0].forEach(function(oWordGroup){\n    if(oWordGroup.category === \"category\") {\n      var sCat = oWordGroup.matchedString;\n      var doms = Model.getDomainsForCategory(theModel,sCat);\n      doms.forEach(function(sDom) {\n        if(domains.indexOf(sDom) < 0) {\n          domains.push(sDom);\n        }\n      });\n    }\n  });\n  if(domains.length === 1) {\n     debuglog(\"got a precise domain \" + domains[0]);\n    return domains[0];\n  }\n  debuglog(debuglog.enabled ? (\"got more than one domain, confused  \" + domains.join(\"\\n\")) :'-');\n  return undefined;\n};"],"sourceRoot":"ABC"}