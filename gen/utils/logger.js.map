{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/utils/logger.ts"],"names":[],"mappings":"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","file":"utils/logger.js","sourcesContent":["\n\n/**\n * a simple logger utility\n *\n *\n * There are two types of logs ( append and overwrite, default is append)\n */\n\n// <reference path=\"../../lib/node-4.d.ts\" />\n\nimport * as debug from 'debug';\n\nconst debuglog = debug('logger');\n\ninterface ILogger {\n  name: string,\n  flags: string,\n  logIt?: (any) => void\n};\n\nvar perfs = {} as {[key : string] : { enabled : boolean, name : string, last: number, first : number, on : {}}};\n\nexport function logPerf(cons : any, sString : string) {\n  if(!this || !this.enabled) {\n    return;\n  }\n  var label = 'perf' + this.name;\n  cons.log('Perf' + this.name);\n  if(this.first === 0) {\n      this.first = Date.now();\n      this.last = this.first;\n  } else {\n    var t = Date.now();\n    cons.log('Perf' + this.name +\n     ' delta: '  + String(\"      \" + (t-this.last)).slice(-6)\n    +' total: '  + String(\"      \" + (t-this.first)).slice(-6));\n    this.last =  t;\n  }\n  if(this.on[sString]) {\n     cons.timeEnd(sString)\n     delete this.on[sString];\n  } else {\n      cons.time(sString);\n      this.on[sString] = 1;\n  }\n}\n\nexport function perf(string) {\n  perfs[string] = { name : string, last : 0, first: 0, on : {}, enabled : false };\n  if (debug('perf' + string).enabled )\n  { perfs[string].enabled = true;\n  }\n  return logPerf.bind(perfs[string], console);\n}\n\nimport * as fs from 'fs';\n\nvar loggers = {} as { [key: string]: ILogger };\n\nvar os = require('os');\n\nfunction getWritableDir() {\n  // return process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'];\n  return os.tmpdir();\n}\n\n\nfunction setupOnce() {\n\n  var home = getWritableDir();\n  try {\n    fs.mkdirSync(home + '/' + 'fdevstart' );\n  } catch (e) {\n\n  }\n  try {\n    fs.mkdirSync(home + '/fdevstart/logs' );\n  } catch(e) {\n\n  }\n}\nsetupOnce();\n\n\nfunction getFileName(name: string) {\n  return os.tmpdir()  + '/fdevstart/logs/' + name + \".log\";\n}\n\nexport const _test = {\n  getFileName: getFileName\n};\n\nfunction logIt(logger: ILogger, arg) {\n  var text: string;\n  if (typeof arg === \"string\") {\n    text = arg;\n  } else if (arg instanceof Error) {\n    text = \"Error:\" + arg.message + \" \" + arg.stack;\n  }\n  if (!text) {\n    throw new Error(\"Illegal argument to log\");\n  }\n  var filename = getFileName(logger.name);\n  var d = new Date();\n  var n = d.toUTCString() + \"\\t\" + text;\n  debuglog('writing log entry to ' + filename + ' ' + n);\n  fs.writeFileSync(filename, n, { encoding: 'utf-8', flag: 'a' });\n}\n\nexport function logger(name: string, flags?: string): (any) => void {\n  if (flags !== 'a' && flags !== '' && flags !== undefined) {\n    throw new Error('only a allowed as flags');\n  }\n  flags = (flags === undefined )?  'a' : flags;\n  if (typeof name !== \"string\" || !/^[A-Za-z][A-Za-z0-9_]+$/.exec(name)) {\n    throw new Error('Logger name must be at least two alphanumeric characters')\n  }\n  if (!loggers[name]) {\n    var alogger = {\n      name: name,\n      flags: flags\n    } as ILogger;\n    alogger.logIt = logIt.bind(undefined, alogger);\n    // reset the file\n    if (flags === '') {\n      try {\n        fs.unlinkSync(getFileName(name));\n      } catch (e) {\n        debuglog(\"***ERROR: unable to remove log file \" + getFileName(name));\n      }\n    }\n    loggers[name] = alogger;\n  }\n  if (loggers[name].flags !== flags) {\n    throw new Error('FLags mismatch in logger' + name);\n  }\n  return loggers[name].logIt;\n}"],"sourceRoot":"ABC"}